name: build

on:
  pull_request_target:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Checkout PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr checkout ${{ github.event.pull_request.number }}
          git config --local user.email "reproducible-central@github.io"
          git config --local user.name "Reproducible Central CI"

      - name: List changed files
        id: changed-files
        uses: tj-actions/changed-files@v45

      - name: Build from buildspec
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ $file == *.buildspec ]]; then
              sudo apt-get install -y dos2unix
              ./rebuild.sh $file
              bin/update-project-summary.sh "$(dirname $file)"
              git add "$(dirname $file)"
              git commit -m "./rebuild.sh $file"
              git push

              . $file
              buildcompare="$(dirname $file)/$(basename $buildinfo .buildinfo).buildcompare"

              echo '```' >> PRcomment.txt
              grep -v okFiles "$buildcompare" >> PRcomment.txt
              echo '```' >> PRcomment.txt

              if [ $(grep "ko=0" PRcomment.txt | wc -l) -eq 0 ]
              then
                echo "$ ./build_diffoscope.sh $buildcompare buildcache/$artifactId"
                ./build_diffoscope.sh "$buildcompare" buildcache/$artifactId
                diffoscope="$(dirname $file)/$(basename $buildinfo .buildinfo).diffoscope"
                [ -f $diffoscope ] && mv "$diffoscope" . \
                  && echo "diffoscope uploaded to ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> PRcomment.txt
              fi

              if [ -f time.txt ]
              then
                echo '```' >> PRcomment.txt
                cat time.txt >> PRcomment.txt
                echo '```' >> PRcomment.txt
                rm -f time.txt
              fi
            fi
          done

      - name: Add PR comment with results
        if: ${{ hashFiles('PRcomment.txt') != '' }}
        uses: mshick/add-pr-comment@v2
        with:
          message-path: |
            PRcomment.txt

      - name: Merge PR
        if: ${{ hashFiles('PRcomment.txt') != '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ $(grep "ko=0" PRcomment.txt | wc -l) -eq 1 ]
          then
            gh pr merge -m -d
          fi

      - name: Archive diffoscope output
        if: ${{ hashFiles('*.diffoscope') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: diffoscope
          path: "*.diffoscope"
